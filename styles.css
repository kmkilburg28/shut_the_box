/* .board_container {
	/* width: 320px;
	height: 320px;
	padding-bottom:
	0px;
	border: 1px solid black;
	position: relative;
} */


/* .board_space {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}
.background {
	width: 100%;
	height: 100%;
	position: absolute
}
.board_container {
	border: 1px solid black;
}
.pieces_container {
	z-index: 2;
	width: 100%;
	height: 100%;
}
.piece {
	background-size: 100%;
	height: 12.5%;
	width: 12.5%;
	position: absolute;
	left: 0;
	top: 0;
	cursor: grab;
	border-radius: 100%;
}

.dragging {
	cursor: grabbing;
	z-index: 2;
}
.hint {
	background-color: rgba(255,255,255,.3);
    padding: 4.2%;
	background-clip: content-box;
    border-radius: 50%;
    box-sizing: border-box;
    pointer-events: none;
	height: 12.5%;
    left: 0;
    position: absolute;
    top: 0;
    width: 12.5%;
} */

:root {
    --animOff: unset;
}

.overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.game-container-outer {
    /* width: 100%; */
    /* height: 100%; */
    /* background-color: rgba(255, 255, 255, 0.5); Semi-transparent white for fog effect */
    z-index: 5; /* Ensure the overlay is on top of the background */
    border-radius: 10px; /* Match the border radius of the game-container */
    background-image: url('wood_texture.jpg'); /* Replace with your own wooden texture image */
    background-size: 100% auto; /* Full width, maintain aspect ratio */
    /* background-repeat: no-repeat; Prevent repeating the image */
    /* border: 10px solid #8b4513; Wooden box border color */
    border-radius: 10px;
}

button.start {
    font-size: 24px;
    padding: 10px 20px;
    background-color: #4caf50;
    color: white;
    border: none;
    cursor: pointer;
    /* position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); */
}

@keyframes shuffle-top {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(-100%);
    }
}
@keyframes shuffle-top-out {
    from {
        transform: translateY(-3em);
    }
    to {
        transform: translateY(-100%);
    }
}
@keyframes shuffle-bottom {
    from {
        /* margin-top: ; */
        transform: translateY(0);
    }
    to {
        transform: translateY(2.5%);
    }
}

.am { background-color: red; }
.ak { background-color: darkred; }
.bm { background-color: green; }
.bk { background-color: darkgreen; }

body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f3f3f3; /* Background color */
}

section {
    height: 100%;
    display: flex; 
    align-content: center;
    flex-wrap: wrap;
    justify-content: center;
    background-image: url('greenfelt_texture.jpeg'); /* Replace with your own wooden texture image */
    background-size: 7.5% auto; /*Full width, maintain aspect ratio
    /* background-repeat: no-repeat; Prevent repeating the image */
}
.game-container {
    position: relative;
    /* width: 100%; */
    /* margin: auto; */
    /* display: flex; */
    justify-content: space-between;
    align-items: center;
    /* padding: 20px; */
    /* border: 10px solid #8b4513; Wooden box border color */
    border-radius: 10px;
}
.game-container-inner {
    position: relative;
    /* display: flex; */
    justify-content: space-between;
    align-items: center;
    padding: 10px 25px 5px 25px;
    background-image: url('wood_texture.jpg'); /* Replace with your own wooden texture image */
    background-size: 100% auto; /* Full width, maintain aspect ratio */
    /* background-repeat: no-repeat; Prevent repeating the image */
    border: 10px solid #8b4513; /* Wooden box border color */
    border-radius: 10px;
}

.fog-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.5); /* Semi-transparent white for fog effect */
    z-index: 2; /* Ensure the overlay is on top of the background */
}

.tiles-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center; /* Center the tiles horizontally */
	z-index: 3; /* Place the tiles above the fog overlay */
    align-items: flex-start; /* Align tiles to the top */

	/* width: calc(100% - 40px); Adjusted width to span from left border to game info */
	width: 100%;
}

.board-container {
    position: relative;
}

.tile {
    width: 50px;
    height: 100%;
    border: 1px solid #8b4513; /* Tile border color */
    margin: 7px; /* Adjusted margin for more spacing */
	padding: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 18px;
    cursor: pointer;
    background-color: #deb887; /* Tile background color */
    color: #8b4513; /* Tile text color */
}

.game-info {
	/* width: auto; */
    text-align: left;
    color: #8b4513; /* Text color */
    position: relative; /* Ensure the game info text is positioned relative to its container */
    z-index: 3; /* Place the game info text above the fog overlay */
}

h2 {
    margin-bottom: 10px;
}

.slide-top {
    animation-name: shuffle-top, shuffle-top-out;
    animation-duration: var(--animOff, 0.25s), var(--animOff, 0.25s);
    animation-delay: 0s, var(--animOff, 0.25s);
    animation-timing-function: ease-in-out, ease-in-out;
    animation-direction:  normal, reverse;
    transform: translateY(-3em);
}
.slide-top-reverse {
    animation-name: shuffle-top-out, shuffle-top;
    animation-duration: var(--animOff, 0.25s), var(--animOff, 0.25s);
    animation-delay: 0s, var(--animOff, 0.25s);
    animation-timing-function: ease-in-out, ease-in-out;
    animation-direction:  normal, reverse;
    /* transform: translateY(0em); */
}
.slide-bottom {
    animation-name: shuffle-bottom, shuffle-bottom;
    animation-duration: var(--animOff, 0.25s), var(--animOff, 0.25s);
    animation-delay: 0s, var(--animOff, 0.25s);
    animation-timing-function: ease-in-out, ease-in-out;
    animation-direction:  normal, reverse;
}
.slide-bottom-reverse {
    animation-name: shuffle-bottom, shuffle-bottom;
    animation-duration: var(--animOff, 0.25s), var(--animOff, 0.25s);
    animation-delay: 0s, var(--animOff, 0.25s);
    animation-timing-function: ease-in-out, ease-in-out;
    animation-direction:  normal, reverse;
}


.tile {
	/* width: 100%; */
	/* padding-top: 100%; 1:1 Aspect Ratio */
}
.unpressed {
	/* background-color: white; */
}
.unpressed:hover {
	background-color: lightgray;
}
.pressed {
	background-color: gray;
}
.pressed:hover {
	background-color: gray;
}
.locked {
	background-color: dimgray;
}
.locked:hover {
	background-color: dimgray;
}

.board-center {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.dice-container {
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 4;
}
.roll-area-container {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}
.roll-info-container {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 4;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    white-space: nowrap;
    transition: opacity var(--animOff, 0.25s) ease;
    opacity: 0.75;
}
.roll-info-container:hover {
    opacity: 0.85;
}
.roll-info {
    background-color: rgb(0, 128, 0);
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    font-size: 18px;
    font-weight: bold;
    cursor: inherit;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.layers > div {
    z-index: 1;
    opacity: 0;
}
.layers > div.active-layer {
    z-index: 3;
    opacity: unset;
}



/* Dice CSS */
.die {
    width: 60px;
    height: 60px;
    background-color: white;
    border-radius: 10px;
    margin: 0 10px;
    display: grid;
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    padding: 4px;
    box-shadow: 0 0 5px rgba(0,0,0,0.3);
}
.dot {
    background-color: black;
    border-radius: 50%;
    align-self: center;
    justify-self: center;
    width: 80%;
    height: 80%;
    visibility: hidden;
}
.die[data-value="1"] .dot:nth-child(5),
.die[data-value="2"] .dot:nth-child(1),
.die[data-value="2"] .dot:nth-child(9),
.die[data-value="3"] .dot:nth-child(1),
.die[data-value="3"] .dot:nth-child(5),
.die[data-value="3"] .dot:nth-child(9),
.die[data-value="4"] .dot:nth-child(1),
.die[data-value="4"] .dot:nth-child(3),
.die[data-value="4"] .dot:nth-child(7),
.die[data-value="4"] .dot:nth-child(9),
.die[data-value="5"] .dot:nth-child(1),
.die[data-value="5"] .dot:nth-child(3),
.die[data-value="5"] .dot:nth-child(5),
.die[data-value="5"] .dot:nth-child(7),
.die[data-value="5"] .dot:nth-child(9),
.die[data-value="6"] .dot:nth-child(1),
.die[data-value="6"] .dot:nth-child(3),
.die[data-value="6"] .dot:nth-child(4),
.die[data-value="6"] .dot:nth-child(6),
.die[data-value="6"] .dot:nth-child(7),
.die[data-value="6"] .dot:nth-child(9),
.die[data-value="7"] .dot:nth-child(1),
.die[data-value="7"] .dot:nth-child(3),
.die[data-value="7"] .dot:nth-child(4),
.die[data-value="7"] .dot:nth-child(5),
.die[data-value="7"] .dot:nth-child(6),
.die[data-value="7"] .dot:nth-child(7),
.die[data-value="7"] .dot:nth-child(9),
.die[data-value="8"] .dot:nth-child(1),
.die[data-value="8"] .dot:nth-child(2),
.die[data-value="8"] .dot:nth-child(3),
.die[data-value="8"] .dot:nth-child(4),
.die[data-value="8"] .dot:nth-child(6),
.die[data-value="8"] .dot:nth-child(7),
.die[data-value="8"] .dot:nth-child(8),
.die[data-value="8"] .dot:nth-child(9),
.die[data-value="9"] .dot:nth-child(1),
.die[data-value="9"] .dot:nth-child(2),
.die[data-value="9"] .dot:nth-child(3),
.die[data-value="9"] .dot:nth-child(4),
.die[data-value="9"] .dot:nth-child(5),
.die[data-value="9"] .dot:nth-child(6),
.die[data-value="9"] .dot:nth-child(7),
.die[data-value="9"] .dot:nth-child(8),
.die[data-value="9"] .dot:nth-child(9) {
    visibility: visible;
}
.rolling {
    animation: shake var(--animOff, 0.5s) infinite;
}
@keyframes shake {
    0% { transform: translate(1px, 1px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-3px, 0px) rotate(1deg); }
    30% { transform: translate(3px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-3px, 1px) rotate(0deg); }
    70% { transform: translate(3px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
}


.disabled, .disabled:hover {
    opacity: 0;
}